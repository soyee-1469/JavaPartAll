-- 20240911
-- 여러 테이블 선언
SELECT *
FROM EMP,
     DEPT
ORDER BY EMPNO;

-- 열 이름을 기준 모든 정보 출력
SELECT *
FROM EMP,
     DEPT
WHERE EMP.DEPTNO = dept.DEPTNO
ORDER BY EMPNO;

-- = 사용 등가조인
-- 필요정보만 묶어서 출력
SELECT EMP.EMPNO, EMP.ENAME, DEPT.DEPTNO, DEPT.DNAME
FROM EMP,
     DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO -- DEPT값이 같을떄
ORDER BY EMPNO;

-- 테이블 이름 별칭 사용하기
SELECT e.EMPNO, e.ENAME, d.DEPTNO, d.DNAME
FROM EMP e,
     DEPT d
WHERE e.DEPTNO = d.DEPTNO -- DEPT값이 같을떄
ORDER BY EMPNO;

-- WHERE 절에 조건 사용
SELECT e.ENAME, d.DNAME, d.LOC
FROM EMP e,
     DEPT d
WHERE e.DEPTNO = d.DEPTNO -- DEPT값이 같을떄
  AND e.SAL >= 2000 -- 추가조건
ORDER BY EMPNO;

-- = 비사용 비등가조인
SELECT E.EMPNO, E.ENAME, E.SAL, S.GRADE
FROM EMP E,
     SALGRADE S
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL; -- =대신 사용

-- 자체 조인 : 같은 테이블을 두번 사용하여 자체 조인
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME -- AS로 대체이름넣어줌
FROM EMP E1,
     EMP E2
WHERE E1.MGR = E2.EMPNO;

-- NATURAL JOIN : 두테이블 이름과 자료형이 같은 열을 찾은 후 그 열을 기준으로 등가 조인
SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E,
     DEPT D
WHERE E.DEPTNO = D.DEPTNO;

-- 방법2 좀더 간략하게 NATURAL 사용
SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E NATURAL JOIN DEPT D; -- E.DEPTNO = D.DEPTNO;

-- 기존 등가 조인과 같지만 방식에 차이가 있음
-- NATURAL JOIN 을 사용할 떄 DEPTNO열을 기준으로 자동 등가 조인됨
-- JOIN - USING : USING(DEPTNO)사용할 컬럼을 명시
SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D USING(DEPTNO)
WHERE E.SAL >= 3000
ORDER BY DEPTNO, E.EMPNO DESC;

-- JOIN ON : ON(조인 조건식) -> 공통 컬럼도 구체적으로 지칭 해야 한다.
SELECT E.EMPNO, E.ENAME, D.DEPTNO, D.DNAME
FROM EMP E JOIN DEPT D ON (E.DEPTNO = D.DEPTNO)
WHERE E.SAL >= 3000
ORDER BY DEPTNO, E.EMPNO DESC;

-- 등가조인은 양쪽 다 값 있을떄만, LEFT RIGHT는 기준항목 값이 있을떄만 가지고 옴
-- * OUTER JOIN
-- LEFT OUTER JOIN : 왼쪽 테이블 열을 기준으로 오른쪽 테이블 열의 데이터 존재 여부에 상관없이 출력
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1 LEFT OUTER JOIN EMP E2
ON(E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;

-- RIGHT OUTER JOIN : 오른쪽 테이블 열을 기준으로 왼쪽 테이블 열 데이터와 상관없이 데이터를 출력
SELECT E1.EMPNO, E1.ENAME, E1.MGR, E2.EMPNO AS MGR_EMPNO, E2.ENAME AS MGR_ENAME
FROM EMP E1 RIGHT OUTER JOIN EMP E2
ON(E1.MGR = E2.EMPNO)
ORDER BY E1.EMPNO;